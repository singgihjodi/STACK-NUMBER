/* STACK-NUMBER
1717051013 - Singgih Jodi Prayoga
1717051022 - Putri Febriana
1717051051 - Patar Martua Doli Siahaan
1757051008 - Ilham Maulidan
*/



#include <iostream>
using namespace std;
#define n 100 

class Stack
{
private:
  int data[n];
	int top;
public:
	Stack()
	{
		top = -1;
	}

	int Top() 
	{
		return data[top];
	}

	int IsEmpty()
	{
		if(top == -1) return 1;
		else return 0;
	}
	void Push(int x) 
	{
	  if(top == n-1) {
			cout<<"Stuck Penuh";
		}
		else {data[++top] = x;
		}
	}
 

	void Pop() 
	{
		if(top == -1) {
			cout<<"Stuck Kosong";
		}
		else {top--;}	
	} 

	

	void Print() {
		int i;
		cout<<"Stack: ";
		for(i = 0;i<=top;i++){
			cout<<data[i];}
			cout<<endl;
	}
};

int tPrecedence(char pr){
	if (pr == '*' || pr == '/'){
		return 1;}
	else if(pr == '+' || pr =='-'){
		return 0;}
	else return -1;
	}

int tOperator(char op){
	string Operator = "+-*/";
	for(int i=0;Operator[i];i++){
		if(op == Operator[i]){
			return 1;}
		}
	return 0;
	}
	
int tOperand(char op){
	string Operand = "1234567890";
	for(int i=0;Operand[i];i++){
		if(op == Operand[i]){
			return 1;}
		}
	return 0;
	}

int hasil(int A,char C,int B){
	int hasil;
	if(C == '+'){
		hasil = B+A;
		}
	else if(C == '-'){
		hasil = B-A;
		}
	else if(C == '*'){
		hasil = B*A;
		}
	else if(C == '/'){
		hasil = B/A;
		}
	return (int)hasil;
	}
	
	

int main()
{	
	Stack S;
    string data;
    	cout<<"input data  berupa infix :";
   				 getline(cin,data);
  
    //Ngilangin spasi==============
    for(int i=0;data[i];i++){
		while(data[i] == ' '){
			for(int j=i;data[j];j++){
				data[j] = data[j+1];
				}
				}
			}
    
    string P;
    
    for(int i=0;data[i];i++){
		if(tOperand(data[i]) == 1){
			P+=data[i];
			}
		
		else if(data[i] == '('){
			S.Push(data[i]);
			}
		
		else if(data[i] == ')'){
			while(S.IsEmpty() == 0 && S.Top() != '('){
				char tmp = S.Top();
				P+=tmp;
				S.Pop();
				}
			
		if(S.Top() == '('){
				S.Pop();}
		}
		
		if(tOperator(data[i]) == 1){
			if(S.IsEmpty() == 1 || S.Top() == '('){
			S.Push(data[i]);}
		
		else{
			while (S.Top() != '(' && tPrecedence(data[i]) <= tPrecedence(S.Top())){
				char tmp = S.Top();
				P+=tmp;
				S.Pop();
				}
			S.Push(data[i]);
			}
    
		}
	}
		while(S.IsEmpty() == 0){
			char tmp = S.Top();
				P+=tmp;
				S.Pop();
			}


		cout<<P<<endl;
		
		for(int i=0;P[i];i++){
			if(tOperand(P[i]) == 1){
				S.Push(P[i]);
				}
				
			else if(tOperator(P[i]) == 1){
				int A,B;
				A = S.Top()-'0';S.Pop();
				B = S.Top()-'0';S.Pop();
				S.Push(hasil(A,P[i],B));
				}	
				
			}
		int hasilakhir = S.Top();
		cout<<endl<<(int)hasilakhir;
		
		
		}
